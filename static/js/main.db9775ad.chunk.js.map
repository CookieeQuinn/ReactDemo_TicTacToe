{"version":3,"sources":["index.jsx"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xisNext","stepNumber","step","setState","xIsNext","slice","length","calculateWinner","concat","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"oOAOA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAOPC,E,kKACJ,SAAaC,GAAI,IAAD,OAEd,OACE,cAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAIxC,WAEE,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GA3BTC,IAAMC,WA6CpBC,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CACP,CAAEN,QAASO,MAAM,GAAGC,KAAK,QAE3BC,SAAS,EACTC,WAAY,GAPG,E,0CAWnB,SAAOC,GACLZ,KAAKa,SAAS,CACZF,WAAYC,EACZE,QAAUF,EAAO,IAAO,M,yBAI5B,SAAYb,GAEV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQQ,MAAM,EAAGf,KAAKM,MAAMK,WAAa,GAE9DV,EADUM,EAAQA,EAAQS,OAAS,GACjBf,QAAQc,QAE5BE,EAAgBhB,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKa,SAAS,CACZH,SAAWV,KAAKM,MAAMI,QACtBH,QAASA,EAAQW,OAAO,CAAC,CACvBjB,QAASA,KAEXU,WAAYJ,EAAQS,Y,oBAIxB,WAAU,IAgBJG,EAhBG,OACDZ,EAAUP,KAAKM,MAAMC,QACrBa,EAAUb,EAAQP,KAAKM,MAAMK,YAC7BU,EAASJ,EAAgBG,EAAQnB,SAEjCqB,EAAQf,EAAQgB,KAAI,SAACX,EAAMY,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,6BACE,wBAAQ5B,QAAS,kBAAM,EAAK8B,OAAOF,IAAnC,SAA2CC,KADpCD,MAab,OALEL,EADEE,EACO,WAAaA,EAEb,iBAAmBrB,KAAKM,MAAMI,QAAU,IAAM,KAIvD,sBAAKf,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEG,QAASmB,EAAQnB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK4B,YAAY5B,QAGrC,sBAAKJ,UAAU,YAAf,UACE,8BAAMwB,IACN,6BAAKG,c,GAvEInB,IAAMC,WAuFzB,SAASa,EAAgBhB,GAWvB,IAVA,IAAM2B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA7B,EAAI,EAAGA,EAAI6B,EAAMZ,OAAQjB,IAAK,CACrC,kBAAkB6B,EAAM7B,GAAxB,GAAO8B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI9B,EAAQ4B,IAAM5B,EAAQ4B,KAAO5B,EAAQ6B,IAAM7B,EAAQ4B,KAAO5B,EAAQ8B,GACpE,OAAO9B,EAAQ4B,GAGnB,OAAO,KAvBTG,IAASC,OACP,cAAC5B,EAAD,IACA6B,SAASC,eAAe,W","file":"static/js/main.db9775ad.chunk.js","sourcesContent":["\r\n\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\n\r\n// 棋盘格\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\n// 棋盘\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    // { console.log(i) }\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />);\r\n  }\r\n\r\n  render() {\r\n    // const status = 'Next player: ' + (this.state.xisNext ? \"x\" : \"0\");\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// function hislist(props) {\r\n//   const hisarr = props.history;\r\n//   const elearr = hisarr.map((square) => {\r\n//     return (\r\n//       <li>\r\n//         {square.slice()}\r\n//       </li>\r\n//     )\r\n//   })\r\n// }\r\n// 游戏\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        { squares: Array(9).fill(null) }\r\n      ],\r\n      xisNext: true,\r\n      stepNumber: 0,\r\n    };\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  handleClick(i) {\r\n    // alert(\"子组件向父组件传值的本质：父组件监听到了子组件传来的消息\");\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xisNext ? 'x' : 'O';\r\n    this.setState({\r\n      xisNext: !(this.state.xisNext),\r\n      history: history.concat([{\r\n        squares: squares\r\n      }]),\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xisNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\n//  判断胜负\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}